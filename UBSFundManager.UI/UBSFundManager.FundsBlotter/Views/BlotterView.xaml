<UserControl x:Class="UBSFundManager.FundsBlotter.Views.BlotterView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:prism="http://www.codeplex.com/prism"
             xmlns:local="clr-namespace:UBSFundManager.Infrastructure.Converters;assembly=UBSFundManager.Infrastructure"
             >
    <i:Interaction.Triggers>
        <prism:InteractionRequestTrigger SourceObject="{Binding ConfirmationRequest, Mode=OneWay}">
            <prism:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True"/>
        </prism:InteractionRequestTrigger>
    </i:Interaction.Triggers>
    <UserControl.Resources>
        <Style x:Key="CellRightAlign">
            <Setter Property="Control.HorizontalAlignment"
            Value="Right" />
        </Style>
        <local:ColorMultiConverter x:Key="colorMultiConverter"></local:ColorMultiConverter>
    </UserControl.Resources>
    <Grid x:Name="LayoutRoot">
        <Grid.Background>
            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="#FF7B97D4" />
                <GradientStop Color="#FF244C8D" Offset="1" />
            </LinearGradientBrush>
        </Grid.Background>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <DataGrid x:Name="gridStocksBlotter"  SelectionMode="Single"
                           ItemsSource="{Binding Path=Stocks,Mode=TwoWay}" AutoGenerateColumns="False" Margin="2" 
                           SelectedItem="{Binding Path=SelectedStock,Mode=TwoWay}"
                            IsSynchronizedWithCurrentItem="False" 
                           AutomationProperties.AutomationId="gridStocksBlotter" IsReadOnly="True">
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Style.Setters>
                       <Setter Property="Background">
                            <Setter.Value>
                                <MultiBinding Converter="{StaticResource colorMultiConverter}">
                                    <Binding Path="Type"/>
                                    <Binding Path="MarketValue"/>
                                    <Binding Path="TransactionCost"/>
                                </MultiBinding>
                            </Setter.Value>
                        </Setter>
                    </Style.Setters>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Stock Type" Binding="{Binding Path=Type}" IsReadOnly="True" Width="75" />
                <DataGridTextColumn Header="Stock Name" Binding="{Binding Path=StockName}" IsReadOnly="True" Width="*" />
                <DataGridTextColumn Header="Price" Binding="{Binding Path=Price,StringFormat=\{0:N8\}}" IsReadOnly="True" Width="*"  ElementStyle="{StaticResource CellRightAlign}"  />
                <DataGridTextColumn Header="Quantity" Binding="{Binding Path=Quantity,StringFormat=\{0:N0\}}" IsReadOnly="True" Width="*"  ElementStyle="{StaticResource CellRightAlign}" />
                <DataGridTextColumn Header="Market Value" Binding="{Binding Path=MarketValue,StringFormat=\{0:N2\}}" IsReadOnly="True" Width="*"   ElementStyle="{StaticResource CellRightAlign}"/>
                <DataGridTextColumn Header="Transaction Cost" Binding="{Binding Path=TransactionCost,StringFormat=\{0:N2\}}" IsReadOnly="True" Width="*"   ElementStyle="{StaticResource CellRightAlign}"/>
                <DataGridTextColumn Header="Stock Weight" Binding="{Binding Path=StockWieght,StringFormat=\{0:P\}}" IsReadOnly="True" Width="*"  ElementStyle="{StaticResource CellRightAlign}" />
                <DataGridTemplateColumn Header="Delete">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Content="X"
                            Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}},
                                              Path=DataContext.DeleteStockCommand}"
                            CommandParameter="{Binding}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>

    </Grid>


</UserControl>
